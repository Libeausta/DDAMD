package Figures

fun main() {
    val f: Figure = Rect(0,3,2,9)
    val f2: Figure = Circle(5, 0, 0)
    val f3: Figure = Square(7, 3, 5)
    println("$f with area: ${f.area()}")
    println("$f2 with area: ${f2.area()}")
    println("$f3 with area: ${f3.area()}")
    println()

    val mr: Movable = Rect(0,3,2,9)
    val mc: Movable = Circle(5, 0, 0)
    val ms: Movable = Square(7, 3, 5)
    mr.move(1,1)
    println("Rectangle after move(1, 1): $mr")
    mc.move(4,2)
    println("Circle after move(4, 2): $mc")
    ms.move(-3,1)
    println("Square after move(-3, 1): $ms")
    println()

    val tr: Transforming = Rect(0,3,2,9)
    val tc: Transforming = Circle(5, 0, 0)
    val ts: Transforming = Square(7, 3, 5)
    tr.resize(2)
    println("Rectangle after resize(2): $tr")
    tc.resize(4)
    println("Circle after resize(4): $tc")
    ts.resize(5)
    println("Square after resize(5): $ts")
    println()

    tr.rotate(RotateDirection.Clockwise, 0, 0)
    println("Rectangle after rotate clockwise (0, 0): $tr")
    tr.rotate(RotateDirection.CounterClockwise, 2, 1)
    println("Rectangle after rotate counter clockwise (2, 1): $tr")
    println()
    tc.rotate(RotateDirection.Clockwise, 7, 1)
    println("Circle after rotate clockwise (7, 1): $tc")
    tc.rotate(RotateDirection.CounterClockwise, 1, 2)
    println("Circle after rotate counter clockwise (1, 2): $tc")
    println()
    ts.rotate(RotateDirection.Clockwise, 3, 3)
    println("Square after rotate clockwise (3, 3): $ts")
    ts.rotate(RotateDirection.CounterClockwise, 1, 4)
    println("Square after rotate counter clockwise (1, 4): $ts")
}
